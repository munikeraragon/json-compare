{"version":3,"sources":["TreeHelper.tsx","Tree.tsx","Upload.tsx","JsonCompare.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["nodeId","TreeHelper","data","layout","temp","TreeItem","toString","label","style","color","marginBottom","Object","keys","map","key","Tree","useEffect","TreeView","defaultCollapseIcon","defaultExpandIcon","Upload","setData","onDrop","useCallback","acceptedFiles","length","file","reader","FileReader","onabort","console","log","onerror","onload","obj","JSON","parse","String","result","err","InvalidJSON","readAsText","useDropzone","getRootProps","getInputProps","className","xmlns","viewBox","fill","d","JsonCompare","useState","file1","elem1","setElem1","file2","elem2","setElem2","elem3","setElem3","jsonCompare","newElem","leaves","width","height","stroke","stroke-miterlimit","stroke-width","attributeName","attributeType","dur","from","repeatCount","to","type","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f06269e7.chunk.js","sourcesContent":["import TreeItem from '@material-ui/lab/TreeItem';\n\nexport interface Obj {\n    [propName: string]: any;\n}\n\nexport interface TreeHelperProps {\n    data: Obj\n    layout: Obj\n}\n\nlet nodeId = 1;\n\nexport const TreeHelper: React.FC<TreeHelperProps> = ({ data, layout }) => {\n\n    if (typeof data === 'string') {\n        let temp = typeof layout === 'string' ? layout === '_equal_' : false;\n        return (\n            <TreeItem nodeId={(nodeId++).toString()} label={data} style={{ color: temp ? 'blue' : 'red' }} />\n        );\n    }\n\n    if (data === null) {\n        return <TreeItem nodeId={(nodeId++).toString()} label='empty' />;\n    }\n    \n\n\n    return (\n        <div style={{marginBottom: '30px'}}>\n            {Object.keys(data).map((key: string) => {\n                let temp =\n                    typeof layout[key] === 'string'\n                        ? layout[key] === '_equal_'\n                        : layout[key] && layout[key]['leaves'] === '_equal_';\n                \n                return (\n                    <TreeItem\n                        nodeId={(nodeId++).toString()}\n                        label={key}\n                        key={nodeId}\n                        style={{ color: temp ? 'blue' : 'red' }}\n                    >\n                        <TreeHelper\n                            data={data[key]}\n                            layout={layout[key] ? layout[key] : {}}\n\n                        />\n                    </TreeItem>\n                );\n            })}\n        </div>\n    );\n};","import { useEffect, useState } from 'react';\nimport TreeView from '@material-ui/lab/TreeView';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { TreeHelper } from './TreeHelper';\n\nexport interface TreeProps {\n    data: Obj\n    layout: Obj\n}\n\nexport interface Obj {\n    [propName: string]: any;\n}\n\nexport const Tree: React.FC<TreeProps> = ({ data, layout }) => {\n    useEffect(() => {}, [layout]);\n    return (\n        <TreeView defaultCollapseIcon={<ExpandMoreIcon />} defaultExpandIcon={<ChevronRightIcon />}>\n            <TreeHelper data={data} layout={layout} />\n        </TreeView>\n    );\n};\n","import { useCallback } from 'react';\nimport { useDropzone, FileWithPath } from 'react-dropzone';\n\n\nexport interface Obj {\n    [propName: string]: any;\n};\n\nexport interface UploadProps {\n    color: string;\n    setData: (obj: Obj) => void\n}\n\nexport const Upload: React.FC<UploadProps> = ({ color, setData }) => {\n    const onDrop = useCallback((acceptedFiles: FileWithPath[]) => {\n\n        if (acceptedFiles.length === 1) {\n            const file = acceptedFiles[0];\n            const reader = new FileReader();\n            reader.onabort = () => console.log('file reading was aborted')\n            reader.onerror = () => console.log('file reading has failed')\n            reader.onload = () => {\n                try {\n                    const obj = JSON.parse(String(reader.result));\n                    setData(obj);\n                } catch (err) {\n                    setData({InvalidJSON: \"Make sure that the uploaded file has a valid JSON format\"})\n                }\n            }\n            reader.readAsText(file)\n        }        \n      }, [])\n\n    const { getRootProps, getInputProps } = useDropzone({ onDrop });\n\n    return (\n        <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            <div\n                className={`flex justify-center items-center ${\n                    color === 'primary' ? 'bg-red-500' : 'bg-indigo-500'\n                }\n             text-white h-8 w-60 m-auto rounded-xl my-2`}\n            >\n                <svg\n                    xmlns='http://www.w3.org/2000/svg'\n                    className='h-5 w-5'\n                    viewBox='0 0 20 20'\n                    fill='currentColor'\n                >\n                    <path d='M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z' />\n                </svg>\n                <p className='text-md font-semibold'>Drag 'n' drop or click</p>\n            </div>\n        </div>\n    );\n};","import { useState, useEffect } from 'react';\nimport { Tree } from './Tree';\nimport { Upload } from './Upload';\nimport file1 from './data/file1.json';\nimport file2 from './data/file2.json';\n\nexport interface Obj {\n    [propName: string]: any;\n}\n\nconst JsonCompare = () => {\n    const [elem1, setElem1] = useState<Obj>(file1);\n    const [elem2, setElem2] = useState<Obj>(file2);\n    const [elem3, setElem3] = useState<any>({});\n\n    useEffect(() => {\n        setElem3(jsonCompare(elem1, elem2));\n    }, [elem1, elem2]);\n\n    const jsonCompare = (elem1: any, elem2: any) => {\n        const newElem: Obj = {};\n        let leaves: boolean = true;\n\n        if (typeof elem1 === 'string' && typeof elem2 === 'string') {\n            return elem1 === elem2 ? '_equal_' : '_unequal_';\n        }\n\n        if ((!elem1 && elem2) || (!elem2 && elem1)) {\n            return '_unequal_';\n        }\n\n        if (!elem1 || !elem2) {\n            return '_equal_';\n        }\n\n        Object.keys(elem1).map((key: string) => {\n            newElem[key] = jsonCompare(elem1[key], elem2[key]);\n            leaves =\n                typeof newElem[key] === 'string'\n                    ? leaves && newElem[key] === '_equal_'\n                    : leaves && newElem[key]['leaves'] === '_equal_';\n        });\n\n        newElem['leaves'] = leaves ? '_equal_' : '_unequal_';\n        return newElem;\n    };\n\n    return (\n        <div className='flex flex-col h-full max-w-7xl m-auto py-4'>\n            <div className=\"flex items-center justify-center\">\n            <svg\n                xmlns='http://www.w3.org/2000/svg'\n                width='3rem'\n                height='3rem'\n                fill='none'\n                viewBox='0 0 602 602'\n            >\n                <g>\n                    <path\n                        stroke='rgb(99, 102, 241)'\n                        stroke-miterlimit='10'\n                        stroke-width='24'\n                        d='M274.151 201.657c66.903-17.997 131.399-24.32 182.018-19.756l1.077-11.95-1.077 11.95c30.477 2.747 55.643 9.518 73.763 18.622 18.414 9.252 27.823 19.969 30.45 29.72h0c2.776 10.303-.231 25.206-12.364 43.484-11.936 17.98-31.68 37.56-58.646 56.139v.001c-40.663 28.018-98.24 52.637-161.885 69.759-65.406 17.596-128.7 26.024-178.487 21.651h0c-31.569-2.772-57.609-10.095-76.356-19.82-19.058-9.886-28.938-21.326-31.677-31.495h0c-2.636-9.786-.088-23.613 10.677-40.523 10.622-16.687 28.385-34.904 52.944-52.425l-6.724-9.425 6.724 9.425c41.556-29.647 101.985-57.176 169.563-75.357zm0 0l-3.116-11.583 3.116 11.583z'\n                    ></path>\n                    <path\n                        stroke='rgb(99, 102, 241)'\n                        stroke-miterlimit='10'\n                        stroke-width='24'\n                        d='M373.214 228.061c49.036 48.941 86.758 101.635 108.114 147.755l10.889-5.042-10.889 5.042c12.859 27.768 19.578 52.949 20.754 73.194 1.194 20.573-3.382 34.081-10.514 41.232h0c-7.535 7.555-21.944 12.403-43.839 11.035-21.539-1.346-48.366-8.656-77.939-22.719l-.001-.001c-44.594-21.205-94.702-58.759-141.351-105.317l-8.138 8.153 8.138-8.153c-47.94-47.846-86.885-98.447-107.99-143.751h0c-13.383-28.726-20.062-54.939-21.013-76.038-.967-21.448 4-35.725 11.437-43.182h0c7.157-7.176 20.405-11.883 40.432-11.016 19.761.856 44.419 7.13 71.872 19.639l4.975-10.92-4.975 10.92c46.451 21.165 100.505 59.734 150.038 109.169zm0 0l8.477-8.494-8.477 8.494z'\n                    ></path>\n                    <path\n                        stroke='rgb(99, 102, 241)'\n                        stroke-miterlimit='10'\n                        stroke-width='24'\n                        d='M325.98 494.55l9.811 6.909-9.811-6.909c-17.619 25.02-36.067 43.429-53.012 54.569-17.221 11.322-31.207 14.112-40.966 11.511h0c-10.311-2.747-21.714-12.801-31.476-32.447-9.604-19.326-16.687-46.213-19.294-78.855v-.001c-3.933-49.221 3.537-111.393 20.533-175.07l-11.594-3.095 11.594 3.095c17.467-65.44 41.817-124.466 70.5-165.396h0c18.186-25.953 37.549-44.843 55.345-56.216 18.091-11.562 32.94-14.398 43.117-11.686h0c9.793 2.61 20.494 11.73 29.756 29.506 9.139 17.541 16.035 42.032 18.928 72.06 4.896 50.811-1.48 116.906-19.526 184.519-17.867 66.937-44.642 125.951-73.905 167.506z'\n                    ></path>\n                    <animateTransform\n                        attributeName='transform'\n                        attributeType='XML'\n                        dur='20s'\n                        from='0 301 301'\n                        repeatCount='indefinite'\n                        to='360 301 301'\n                        type='rotate'\n                    ></animateTransform>\n                </g>\n                <path\n                    fill='rgb(99, 102, 241)'\n                    d='M301.007 269.002a62.496 62.496 0 00-4.799-4.301c-1.568-1.254-3.439-2.596-5.615-4.026a30.06 30.06 0 00-7.055-3.411c-2.527-.842-5.007-1.264-7.436-1.264-8.779 0-15.657 2.43-20.635 7.29-4.979 4.859-7.467 11.601-7.467 20.223 0 8.661 4.488 17.479 13.463 26.455 0 0 24.492 21.967 39.544 36.043 15.053-14.076 39.545-36.043 39.545-36.043 8.975-8.976 13.463-17.794 13.463-26.455 0-8.622-2.488-15.364-7.467-20.223-4.978-4.86-11.856-7.29-20.635-7.29-2.429 0-4.909.422-7.436 1.264a30.06 30.06 0 00-7.055 3.411c-2.176 1.43-4.047 2.772-5.615 4.026a62.699 62.699 0 00-4.8 4.301z'\n                ></path>\n            </svg>\n            <h1 className='text-center text-xl font-bold text-gray-700'> JSON Compare </h1>\n            </div>\n\n            <div className='flex-1 grid grid-cols-1 py-2 md:grid-cols-2 md:gap-1 lg:gap-8'>\n                <div className='flex flex-col mx-2'>\n                    <Upload color='primary' setData={setElem1} />\n                    <div className='flex-1 border border-red-200 rounded shadow-lg p-4'>\n                        <Tree data={elem1} layout={elem3} />\n                    </div>\n                </div>\n\n                <div className='flex flex-col mx-2'>\n                    <Upload color='secondary' setData={setElem2} />\n                    <div className='flex-1 border border-indigo-200 rounded shadow-lg p-4'>\n                        <Tree data={elem2} layout={elem3} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default JsonCompare;\n","import JsonCompare from './JsonCompare';\n\nfunction App() {\n  return (\n    <div className=\"h-full\">\n      <JsonCompare />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}